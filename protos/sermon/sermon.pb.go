// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: sermon.proto

package sermon

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateSermonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Preacher      string `protobuf:"bytes,3,opt,name=Preacher,proto3" json:"Preacher,omitempty"`
	Category      int32  `protobuf:"varint,4,opt,name=Category,proto3" json:"Category,omitempty"`
	FeaturedImage string `protobuf:"bytes,5,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
}

func (x *CreateSermonRequest) Reset() {
	*x = CreateSermonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSermonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSermonRequest) ProtoMessage() {}

func (x *CreateSermonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSermonRequest.ProtoReflect.Descriptor instead.
func (*CreateSermonRequest) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSermonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSermonRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateSermonRequest) GetPreacher() string {
	if x != nil {
		return x.Preacher
	}
	return ""
}

func (x *CreateSermonRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *CreateSermonRequest) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

type CreateSermonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Preacher      string `protobuf:"bytes,3,opt,name=Preacher,proto3" json:"Preacher,omitempty"`
	Category      int32  `protobuf:"varint,4,opt,name=Category,proto3" json:"Category,omitempty"`
	FeaturedImage string `protobuf:"bytes,5,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
}

func (x *CreateSermonResponse) Reset() {
	*x = CreateSermonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSermonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSermonResponse) ProtoMessage() {}

func (x *CreateSermonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSermonResponse.ProtoReflect.Descriptor instead.
func (*CreateSermonResponse) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSermonResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSermonResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateSermonResponse) GetPreacher() string {
	if x != nil {
		return x.Preacher
	}
	return ""
}

func (x *CreateSermonResponse) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *CreateSermonResponse) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

type UpdateSermonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Preacher      string `protobuf:"bytes,4,opt,name=Preacher,proto3" json:"Preacher,omitempty"`
	Category      int32  `protobuf:"varint,5,opt,name=Category,proto3" json:"Category,omitempty"`
	FeaturedImage string `protobuf:"bytes,6,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
}

func (x *UpdateSermonRequest) Reset() {
	*x = UpdateSermonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSermonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSermonRequest) ProtoMessage() {}

func (x *UpdateSermonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSermonRequest.ProtoReflect.Descriptor instead.
func (*UpdateSermonRequest) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSermonRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateSermonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSermonRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateSermonRequest) GetPreacher() string {
	if x != nil {
		return x.Preacher
	}
	return ""
}

func (x *UpdateSermonRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *UpdateSermonRequest) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

type UpdateSermonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Preacher      string `protobuf:"bytes,4,opt,name=Preacher,proto3" json:"Preacher,omitempty"`
	Category      int32  `protobuf:"varint,5,opt,name=Category,proto3" json:"Category,omitempty"`
	FeaturedImage string `protobuf:"bytes,6,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
}

func (x *UpdateSermonResponse) Reset() {
	*x = UpdateSermonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSermonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSermonResponse) ProtoMessage() {}

func (x *UpdateSermonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSermonResponse.ProtoReflect.Descriptor instead.
func (*UpdateSermonResponse) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateSermonResponse) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateSermonResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSermonResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateSermonResponse) GetPreacher() string {
	if x != nil {
		return x.Preacher
	}
	return ""
}

func (x *UpdateSermonResponse) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *UpdateSermonResponse) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

type DeleteSermonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteSermonRequest) Reset() {
	*x = DeleteSermonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSermonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSermonRequest) ProtoMessage() {}

func (x *DeleteSermonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSermonRequest.ProtoReflect.Descriptor instead.
func (*DeleteSermonRequest) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSermonRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{5}
}

type GetSermonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSermonRequest) Reset() {
	*x = GetSermonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSermonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSermonRequest) ProtoMessage() {}

func (x *GetSermonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSermonRequest.ProtoReflect.Descriptor instead.
func (*GetSermonRequest) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{6}
}

func (x *GetSermonRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetSermonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Preacher      string `protobuf:"bytes,3,opt,name=Preacher,proto3" json:"Preacher,omitempty"`
	Category      int32  `protobuf:"varint,4,opt,name=Category,proto3" json:"Category,omitempty"`
	FeaturedImage string `protobuf:"bytes,5,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
}

func (x *GetSermonResponse) Reset() {
	*x = GetSermonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSermonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSermonResponse) ProtoMessage() {}

func (x *GetSermonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSermonResponse.ProtoReflect.Descriptor instead.
func (*GetSermonResponse) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{7}
}

func (x *GetSermonResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetSermonResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetSermonResponse) GetPreacher() string {
	if x != nil {
		return x.Preacher
	}
	return ""
}

func (x *GetSermonResponse) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GetSermonResponse) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

type GetAllSermonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber    int32 `protobuf:"varint,1,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	ResultPerPage int32 `protobuf:"varint,2,opt,name=ResultPerPage,proto3" json:"ResultPerPage,omitempty"`
}

func (x *GetAllSermonsRequest) Reset() {
	*x = GetAllSermonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSermonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSermonsRequest) ProtoMessage() {}

func (x *GetAllSermonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSermonsRequest.ProtoReflect.Descriptor instead.
func (*GetAllSermonsRequest) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllSermonsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetAllSermonsRequest) GetResultPerPage() int32 {
	if x != nil {
		return x.ResultPerPage
	}
	return 0
}

type GetAllSermonsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount    int32                `protobuf:"varint,1,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	PageNumber    int32                `protobuf:"varint,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	ResultPerPage int32                `protobuf:"varint,3,opt,name=ResultPerPage,proto3" json:"ResultPerPage,omitempty"`
	Sermons       []*GetSermonResponse `protobuf:"bytes,4,rep,name=Sermons,proto3" json:"Sermons,omitempty"`
}

func (x *GetAllSermonsResponse) Reset() {
	*x = GetAllSermonsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sermon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSermonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSermonsResponse) ProtoMessage() {}

func (x *GetAllSermonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sermon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSermonsResponse.ProtoReflect.Descriptor instead.
func (*GetAllSermonsResponse) Descriptor() ([]byte, []int) {
	return file_sermon_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllSermonsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetAllSermonsResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetAllSermonsResponse) GetResultPerPage() int32 {
	if x != nil {
		return x.ResultPerPage
	}
	return 0
}

func (x *GetAllSermonsResponse) GetSermons() []*GetSermonResponse {
	if x != nil {
		return x.Sermons
	}
	return nil
}

var File_sermon_proto protoreflect.FileDescriptor

var file_sermon_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x22, 0xa1, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x22, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0xab,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x07, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x73, 0x32, 0xae, 0x02, 0x0a,
	0x06, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x6d, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x73, 0x12, 0x15,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65,
	0x72, 0x6d, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x12,
	0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x12, 0x14,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x12, 0x14,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a,
	0x06, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sermon_proto_rawDescOnce sync.Once
	file_sermon_proto_rawDescData = file_sermon_proto_rawDesc
)

func file_sermon_proto_rawDescGZIP() []byte {
	file_sermon_proto_rawDescOnce.Do(func() {
		file_sermon_proto_rawDescData = protoimpl.X.CompressGZIP(file_sermon_proto_rawDescData)
	})
	return file_sermon_proto_rawDescData
}

var file_sermon_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sermon_proto_goTypes = []interface{}{
	(*CreateSermonRequest)(nil),   // 0: CreateSermonRequest
	(*CreateSermonResponse)(nil),  // 1: CreateSermonResponse
	(*UpdateSermonRequest)(nil),   // 2: UpdateSermonRequest
	(*UpdateSermonResponse)(nil),  // 3: UpdateSermonResponse
	(*DeleteSermonRequest)(nil),   // 4: DeleteSermonRequest
	(*Empty)(nil),                 // 5: Empty
	(*GetSermonRequest)(nil),      // 6: GetSermonRequest
	(*GetSermonResponse)(nil),     // 7: GetSermonResponse
	(*GetAllSermonsRequest)(nil),  // 8: GetAllSermonsRequest
	(*GetAllSermonsResponse)(nil), // 9: GetAllSermonsResponse
}
var file_sermon_proto_depIdxs = []int32{
	7, // 0: GetAllSermonsResponse.Sermons:type_name -> GetSermonResponse
	6, // 1: Sermon.GetSermon:input_type -> GetSermonRequest
	8, // 2: Sermon.GetAllSermons:input_type -> GetAllSermonsRequest
	0, // 3: Sermon.CreateSermon:input_type -> CreateSermonRequest
	4, // 4: Sermon.DeleteSermon:input_type -> DeleteSermonRequest
	2, // 5: Sermon.UpdateSermon:input_type -> UpdateSermonRequest
	7, // 6: Sermon.GetSermon:output_type -> GetSermonResponse
	9, // 7: Sermon.GetAllSermons:output_type -> GetAllSermonsResponse
	1, // 8: Sermon.CreateSermon:output_type -> CreateSermonResponse
	5, // 9: Sermon.DeleteSermon:output_type -> Empty
	3, // 10: Sermon.UpdateSermon:output_type -> UpdateSermonResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sermon_proto_init() }
func file_sermon_proto_init() {
	if File_sermon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sermon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSermonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSermonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSermonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSermonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSermonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSermonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSermonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSermonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sermon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSermonsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sermon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sermon_proto_goTypes,
		DependencyIndexes: file_sermon_proto_depIdxs,
		MessageInfos:      file_sermon_proto_msgTypes,
	}.Build()
	File_sermon_proto = out.File
	file_sermon_proto_rawDesc = nil
	file_sermon_proto_goTypes = nil
	file_sermon_proto_depIdxs = nil
}
